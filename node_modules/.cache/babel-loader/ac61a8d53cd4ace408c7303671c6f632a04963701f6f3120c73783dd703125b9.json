{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SwipeAreaRoot = styled('div')(({\n  theme,\n  ownerState\n}) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  zIndex: theme.zIndex.drawer - 1,\n  ...(ownerState.anchor === 'left' && {\n    right: 'auto'\n  }),\n  ...(ownerState.anchor === 'right' && {\n    left: 'auto',\n    right: 0\n  }),\n  ...(ownerState.anchor === 'top' && {\n    bottom: 'auto',\n    right: 0\n  }),\n  ...(ownerState.anchor === 'bottom' && {\n    top: 'auto',\n    bottom: 0,\n    right: 0\n  })\n}));\n\n/**\n * @ignore - internal component.\n */\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes = {},\n    className,\n    width,\n    style,\n    ...other\n  } = props;\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, {\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: {\n      [isHorizontal(anchor) ? 'width' : 'height']: width,\n      ...style\n    },\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The width of the left most (or right most) area in `px` where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default SwipeArea;","map":{"version":3,"names":["React","PropTypes","clsx","styled","capitalize","isHorizontal","jsx","_jsx","SwipeAreaRoot","theme","ownerState","position","top","left","bottom","zIndex","drawer","anchor","right","SwipeArea","forwardRef","props","ref","classes","className","width","style","other","root","process","env","NODE_ENV","propTypes","oneOf","isRequired","object","string","number"],"sources":["/Users/sriyachoudary/Desktop/Portfolio/Portfolio/node_modules/@mui/material/SwipeableDrawer/SwipeArea.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SwipeAreaRoot = styled('div')(({\n  theme,\n  ownerState\n}) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  zIndex: theme.zIndex.drawer - 1,\n  ...(ownerState.anchor === 'left' && {\n    right: 'auto'\n  }),\n  ...(ownerState.anchor === 'right' && {\n    left: 'auto',\n    right: 0\n  }),\n  ...(ownerState.anchor === 'top' && {\n    bottom: 'auto',\n    right: 0\n  }),\n  ...(ownerState.anchor === 'bottom' && {\n    top: 'auto',\n    bottom: 0,\n    right: 0\n  })\n}));\n\n/**\n * @ignore - internal component.\n */\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes = {},\n    className,\n    width,\n    style,\n    ...other\n  } = props;\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, {\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: {\n      [isHorizontal(anchor) ? 'width' : 'height']: width,\n      ...style\n    },\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The width of the left most (or right most) area in `px` where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default SwipeArea;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,aAAa,GAAGL,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;EACnCM,KAAK;EACLC;AACF,CAAC,MAAM;EACLC,QAAQ,EAAE,OAAO;EACjBC,GAAG,EAAE,CAAC;EACNC,IAAI,EAAE,CAAC;EACPC,MAAM,EAAE,CAAC;EACTC,MAAM,EAAEN,KAAK,CAACM,MAAM,CAACC,MAAM,GAAG,CAAC;EAC/B,IAAIN,UAAU,CAACO,MAAM,KAAK,MAAM,IAAI;IAClCC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,IAAIR,UAAU,CAACO,MAAM,KAAK,OAAO,IAAI;IACnCJ,IAAI,EAAE,MAAM;IACZK,KAAK,EAAE;EACT,CAAC,CAAC;EACF,IAAIR,UAAU,CAACO,MAAM,KAAK,KAAK,IAAI;IACjCH,MAAM,EAAE,MAAM;IACdI,KAAK,EAAE;EACT,CAAC,CAAC;EACF,IAAIR,UAAU,CAACO,MAAM,KAAK,QAAQ,IAAI;IACpCL,GAAG,EAAE,MAAM;IACXE,MAAM,EAAE,CAAC;IACTI,KAAK,EAAE;EACT,CAAC;AACH,CAAC,CAAC,CAAC;;AAEH;AACA;AACA;AACA,MAAMC,SAAS,GAAG,aAAanB,KAAK,CAACoB,UAAU,CAAC,SAASD,SAASA,CAACE,KAAK,EAAEC,GAAG,EAAE;EAC7E,MAAM;IACJL,MAAM;IACNM,OAAO,GAAG,CAAC,CAAC;IACZC,SAAS;IACTC,KAAK;IACLC,KAAK;IACL,GAAGC;EACL,CAAC,GAAGN,KAAK;EACT,MAAMX,UAAU,GAAGW,KAAK;EACxB,OAAO,aAAad,IAAI,CAACC,aAAa,EAAE;IACtCgB,SAAS,EAAEtB,IAAI,CAAC,uBAAuB,EAAEqB,OAAO,CAACK,IAAI,EAAEL,OAAO,CAAC,SAASnB,UAAU,CAACa,MAAM,CAAC,EAAE,CAAC,EAAEO,SAAS,CAAC;IACzGF,GAAG,EAAEA,GAAG;IACRI,KAAK,EAAE;MACL,CAACrB,YAAY,CAACY,MAAM,CAAC,GAAG,OAAO,GAAG,QAAQ,GAAGQ,KAAK;MAClD,GAAGC;IACL,CAAC;IACDhB,UAAU,EAAEA,UAAU;IACtB,GAAGiB;EACL,CAAC,CAAC;AACJ,CAAC,CAAC;AACFE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGZ,SAAS,CAACa,SAAS,GAAG;EAC5D;AACF;AACA;EACEf,MAAM,EAAEhB,SAAS,CAACgC,KAAK,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAACC,UAAU;EACtE;AACF;AACA;EACEX,OAAO,EAAEtB,SAAS,CAACkC,MAAM;EACzB;AACF;AACA;EACEX,SAAS,EAAEvB,SAAS,CAACmC,MAAM;EAC3B;AACF;AACA;EACEV,KAAK,EAAEzB,SAAS,CAACkC,MAAM;EACvB;AACF;AACA;AACA;EACEV,KAAK,EAAExB,SAAS,CAACoC,MAAM,CAACH;AAC1B,CAAC,GAAG,KAAK,CAAC;AACV,eAAef,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}